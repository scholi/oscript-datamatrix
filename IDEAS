 * use goto
 * use \ to separate even keywords (must be left aligned to border)
 * use identifier _ __ ___ ...
 * use a struct with an inf linked list to do _._->_->_ ...
 * something with union?
 * assembly (f.ex. printf) as const char* shellcode; and run by pointing a pointer on it
 * defines, but not too extreme
 * comma expressions
 * use the precompiler and ##, # (#define glue(a,b) a##b, glue(i,nt) main)
 * precompiler #ifdef stuff and #warning, #error, #line to "compute" something while compiling?
 * int *[5]   array of 5 pointers toint
   int (*)[5]   pointer to an array of 5 integers
   int (*)[*]   pointer to an variable length array of an unspecified number of integers
   int *()  function with no parameter specification returning a pointer to int
   int (*)(void)  function with no parameters returning an int
   int (*const [])(unsigned int, ...)   array of an unspecified number of constant pointers to functions returning an int. Each function takes one parameter of type unsigned int and an unspecified number of other parameters.

  * ...
